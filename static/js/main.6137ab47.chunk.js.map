{"version":3,"sources":["images/logo.png","images sync /^/.//.*$","images/collegion.svg","images/resellanalytics.svg","images/swiped.svg","components/Link.js","components/Button.js","components/Card.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","Link","style","this","props","className","href","link","icon","text","Component","Button","onClick","onclick","Card","src","image","jobTitle","jobDate","jobDescription","jobLink","workProjects","require","App","state","projects","cards","i","project","logo","push","name","background","setState","createWorkCards","marginTop","window","location","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6137ab47.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c6eb9095.png\";","var map = {\n\t\"./collegion.svg\": 18,\n\t\"./logo.png\": 7,\n\t\"./resellanalytics.svg\": 19,\n\t\"./swiped.svg\": 20\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 17;","module.exports = __webpack_public_path__ + \"static/media/collegion.a100879a.svg\";","module.exports = __webpack_public_path__ + \"static/media/resellanalytics.97f3356e.svg\";","module.exports = __webpack_public_path__ + \"static/media/swiped.92a14c11.svg\";","import '../App.css';\n\nimport React, {\n  Component\n} from 'react';\n\nclass Link extends Component {\n  render() {\n    return (\n      <div style={this.props.style} className=\"link-container\">\n        <a href={this.props.link}>\n          <i className = {this.props.icon}></i>\n          {this.props.text}\n          </a>\n      </div>\n    )\n  }\n}\n\nexport default Link\n","import '../App.css';\n\nimport React, {\n  Component\n} from 'react';\n\nclass Button extends Component {\n  render() {\n    return (\n      <div className={\"button-container\"}>\n        <button style={this.props.style} className={\"button\"} onClick={this.props.onclick}>\n          {this.props.text}\n        </button>\n      </div>\n    )\n  }\n}\n\nexport default Button\n","import '../App.css';\n\nimport React, {\n  Component\n} from 'react';\n\nclass Card extends Component {\n  render() {\n    return (\n      <div style={this.props.style} className=\"card\">\n\n        <div className=\"default\">\n          <img className=\"workLogo\" src={this.props.image}/>\n        </div>\n\n        <div className=\"hover\">\n          <h5 className=\"job-title\">{this.props.jobTitle}</h5>\n          <p className=\"job-date\">{this.props.jobDate}</p>\n          <p className=\"job-description\">{this.props.jobDescription}</p>\n          <a className=\"job-link\" href={this.props.jobLink}>Link to company.</a>\n        </div>\n\n      </div>\n    )\n  }\n}\n\nexport default Card\n","import React, { Component } from 'react';\nimport './App.css';\nimport logo from './images/logo.png';\nimport Link from './components/Link';\nimport Button from './components/Button';\nimport Card from './components/Card';\nconst workProjects = require('./data/work.json');\n\nclass App extends Component {\n  constructor() {\n      super();\n      this.state = { projects: [], workProjects: []};\n  }\n\n  createWorkCards () {\n    let cards = []\n    for (var i in workProjects) {\n      let project = workProjects[i];\n      let logo = require(`./images/${project.logo}`);\n      cards.push({image: logo, name: project.name, background: project.background, jobTitle: project.jobTitle, jobDescription: project.jobDescription, jobDate: project.jobDate, jobLink: project.link});\n    }\n    this.setState({workProjects: cards});\n  }\n\n\n  componentDidMount () {\n    this.createWorkCards();\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"nav\">\n\n          <div className=\"info-container\">\n            <img className=\"logo\" src={logo}/>\n            <h2 className=\"name\">Roberto Infante</h2>\n            <p className=\"title\">developer</p>\n            <hr className=\"divider\"/>\n          </div>\n\n          <div className=\"links-container\">\n            <Link style={ {marginTop: 20} }  icon=\"fas fa-location-arrow\" text=\"London, ON, Canada\" link=\"#\"/>\n            <Link icon=\"fab fa-github\" text=\"@Infante\" link=\"https://github.com/Infante\"/>\n            <Link icon=\"fab fa-twitter\" text=\"@liluzi\" link={\"https://twitter.com/liluzi\"}/>\n            <Link icon=\"fab fa-linkedin-in\" text=\"Roberto Infante\" link=\"https://www.linkedin.com/in/roberto-infante-bb4b56172/\"/>\n          </div>\n\n          <div className=\"buttons-container\">\n            <Button text=\"Contact\" onclick={function () { window.location.href = 'mailto:contact@robertoinfante.com' }}/>\n          </div>\n\n        </div>\n\n        <div className=\"section\">\n          <h2 className=\"section-title\">Work Experience</h2>\n          <p className=\"section-subtitle\">Hover over cards for more details.</p>\n          <div className=\"card-container\">\n            {this.state.workProjects.map(project => (\n              <Card style={{background: project.background}} image={project.image} name={project.name} jobTitle={project.jobTitle} jobDate={project.jobDate} jobDescription={project.jobDescription} jobLink={project.jobLink} />\n            ))}\n          </div>\n        </div>\n\n        <div className=\"section\">\n        <h2 className=\"section-title\">Projects</h2>\n        <p className=\"section-subtitle\">More coming soon...</p>\n        </div>\n\n\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}